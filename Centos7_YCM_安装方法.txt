1、系统安装
	安装centos7.4,选择基础网络服务器，附加选项为开发工具和调试工具

2、安装vim8
	2.1 环境准备
		yum install -y python-devel ncurses-devel.x86_64

	2.2 下载vim8源码
		wget ftp://ftp.vim.org/pub/vim/unix/vim-8.0.tar.bz2
		tar -jxf vim-8.0.tar.bz2
	
	2.3 编译与安装
		cd vim80
		./configure --prefix=/usr/local/vim8 --enable-fail-if-missing --with-python-config-dir=/usr/lib64/python2.7/config --enable-pythoninterp=yes --enable-multibyte --with-features=huge --enable-fontset	
		make
		make install
		mv /usr/bin/vim /usr/bin/vim.bak
		cp /usr/local/vim8/bin/vim /usr/bin/		
		******************************************************************参考BEGINE******************************************************************
		编译参数说明：
			–with-features=huge：支持最大特性
			–enable-rubyinterp：打开对ruby编写的插件的支持
			–enable-pythoninterp：打开对python编写的插件的支持
			–enable-python3interp：打开对python3编写的插件的支持
			–enable-luainterp：打开对lua编写的插件的支持
			–enable-perlinterp：打开对perl编写的插件的支持
			–enable-multibyte：打开多字节支持，可以在Vim中输入中文
			–enable-cscope：打开对cscope的支持
			–with-python-config-dir=/usr/lib64/python2.7/config 指定python 路径
			–with-python-config-dir=/usr/lib64/python3.5/config 指定python3路径
		注意：必须带上Python编写插件支持，最好带上Python路径，否则使用时会报这个错误：YouCompleteMe unavailable: requires Vim compiled with Python (2.6+ or 3.3+) support
		******************************************************************参考END******************************************************************
		
3、安装cmake3.x.x（用于编译YouCompleteMe，yum安装的2.8版本不行）
	3.1 下载camke3.10.3源码
		wget https://cmake.org/files/v3.15/cmake-3.15.0-Linux-x86_64.tar.gz
		tar -xzvf cmake-3.15.0-Linux-x86_64.tar.gz
	
	3.2 编译与安装
		cd cmake-3.10.3
		./bootstrap --prefix=/usr/local/cmake
		make
		make install
		cd /usr/bin
		ln -s /usr/local/cmake/bin/cmake cmake
		
4、安装YouCompleteMe
	4.1 下载插件管理器Vundle
		git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim	
		
	4.2 配置.vimrc，并保存	
		set nocompatible 
		filetype off 
		set rtp+=~/.vim/bundle/Vundle.vim 
		call vundle#begin() 
		Plugin 'VundleVim/Vundle.vim'
		Plugin 'runtest007/YouCompleteMe'
		"也可以使用gitee上的仓库
		"Plugin 'https://gitee.com/runtest007/YouCompleteMe.git'
		call vundle#end() 
		filetype plugin indent on
	
	4.3 下载YouCompleteMe
		*方式1：
			打开vim，输入如下命令
			:PluginInstall
			等待处理完成后退出(即vim最下面出现done时，说明下载完成)
		*方式2：
			直接使用git clone命令下载
			git clone https://github.com/runtest007/YouCompleteMe.git ~/.vim/bundle/YouCompleteMe
			(或者git clone https://gitee.com/runtest007/YouCompleteMe.git ~/.vim/bundle/YouCompleteMe)
	
	4.4 编译YouCompleteMe
		*执行下述命令
			cd ~/.vim/bundle/YouCompleteMe/
			./install.py --clang-completer
		
		*注意事项
			如果使用--clang-completer选项，脚本会判断当前是否有upstream pre-build libclang.so库。由于看网络状况，可能会下载不全（sha256值不对），导致下面编译YouCompleteMe时出错：
			CMake Error at ycm/CMakeLists.txt:xxx (file): file DOWNLOAD HASH mismatch。
		
		*解决方法
			将原来下载的文件重命名或者删除,并重新下载文件，然后在执行./install.py --clang-completer，命令如下
			cd ~/.vim/bundle/YouCompleteMe/third_party/ycmd/clang_archives
			mv libclang-x.x.x-x86_64-unknown-linux-gnu.tar.bz2  bak_libclang-x.x.x-x86_64-unknown-linux-gnu.tar.bz2
			wget https://dl.bintray.com/micbou/libclang/libclang-x.x.x-x86_64-unknown-linux-gnu.tar.bz2
			cd ~/.vim/bundle/YouCompleteMe/
			./install.py --clang-completer
			
	4.5 配置YouCompleteMe
		*拷贝.ycm_extra_conf.py到用户目录下
			cp ~/.vim/bundle/YouCompleteMe/third_party/ycmd/examples/.ycm_extra_conf.py  ~
		
		*修改.ycm_extra_conf.py内容
			主要是修改此文件中的flags表：
				#解析C/C++相关的符号提示（系统的、三方库的、自己的），需要配置-isystem，'-I'，参数为头文件所在目录。
					'-isystem',
					'/usr/include/c++/4.8.5',
					'-I',
					'/root/my_proj',
				#c++项目
					'-std=c++11',
					'-x',
					'c++',
				#c项目
					'-std=c99',
					'-x',
					'c',
					
		*编辑~/.vimrc，增加以下内容	
			let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'  			"设置全局配置文件的路径
			let g:ycm_seed_identifiers_with_syntax=1    						" 语法关键字补全
			let g:ycm_confirm_extra_conf=0  									" 打开vim时不再询问是否加载ycm_extra_conf.py配置
			let g:ycm_key_invoke_completion = '<C-a>' 							" ctrl + a 触发补全，防止与其他插件冲突
			set completeopt=longest,menu    									"让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)
			nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR> "定义跳转快捷键
		
	4.6 运行
			现在运行vim已经可以进行提示补全了
		

				

					
					
		
	
	
	

	